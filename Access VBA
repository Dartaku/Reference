'------------------------------------------------------------
' Back Up Existing Table for SQL Usage - Darryl
'
' Copy existing table and renaming them with _prev
'------------------------------------------------------------
Public Function BackUpTable()
On Error GoTo BackUpTable_Err

'List of Backup Files
'COMBINEDTL_DTL
'COMBINEOD_OD
'COMBINEOD_MTA
'Currency Code
'STF_COMBINE_PL *Unsecured - Isabelle will do this*
'This Macro will popup a do you want to replace table files. Click Yes and make sure the tables show the previous month mis_dte

ListOfBackupFiles = Array("COMBINEDTL_DTL", "COMBINEOD_MTA", "COMBINEOD_OD", "Currency Code")

For i = 0 To UBound(ListOfBackupFiles)
    DoCmd.CopyObject "", ListOfBackupFiles(i) + "_prev", acTable, ListOfBackupFiles(i)
Next i

BackUpTable_Exit:
    Exit Function

BackUpTable_Err:
    MsgBox Error$
    Resume BackUpTable_Exit

End Function
'------------------------------------------------------------
' End of Back Up Existing Table for SQL Usage - Darryl
'
'------------------------------------------------------------


'------------------------------------------------------------
' Import Required Excel Files - Darryl
'
'------------------------------------------------------------
Public Function ImportExcelFiles()
On Error GoTo ImportExcelFiles_Err
Dim DefaultLoc As String
Dim CurMth, CurMthNum As String
Dim CurYear As String
Dim ListOfSASFiles, ListOfSASFiles2, ListOfSASFiles3

MthNum = Month(Date) - 1
If MthNum = 0 Then MthNum = 12
CurMthNum = Format(MthNum, "00") 'Update with current month based on the MVCI File Name - Set by Mortgage Team
CurMth = Left(MonthName(MthNum), 3) 'Update with current month based on the folder name
CurYear = Year(Date - 30) 'Update with current year based on the folder name
DefaultLoc = "G:\RISK_MGMT19\INVESTMENT\CIR\" + CurYear + "\" + CurMth + " " + CurYear + "\"
MortgageMVCI = "G:\RISK_MGMT20\SECURED\MORTGAGE\DataSet\MVCI\Investment_Rpt"
CurrencyLoc = "G:\RISK_MGMT19\INVESTMENT\CIR\CurrencyRates_Source\"
CurrencyVar = Right(CurYear, 2) & CurMthNum

'CurMth = "Jun"
'CurYear = "2016"
'DefaultLoc Example = G:\RISK_MGMT19\INVESTMENT\CIR\2016\Jun 2016\

'----------------------------------------------------------------------
'Reason for Part 1 and 2 is due to the different file names and data.
'COMBINEDTL Data is being used by different SAS Codes post CIR Run.
'Thus it is too inefficient to fix that
'
'Code Intention - Delete previous table and import new tables
'Make sure file names are the same as what is written in the code
'
'Files that should be uploaded (15/7/2016)
'CLMS_CIRNEW
'CLMS_CIRSAME
'LEVCIR
'UNUSEDDTL
'MVCI Listing (From Mortgage Team)
'COMBINEDTL
'COMBINEOD
'Overline OD (From Cold Report)
'CurrencyRates
'
'FileNotes
'Add new file notes above the previous date
'
'
'02 Sept 2016
'Added MortgageMVCI folder so we can reference straight to their source
'
'
'
'
'
'----------------------------------------------------------------------
'Please update file names here if there are changes
ListOfSASFiles = Array("CLMS_CIRNEW", "CLMS_CIRSAME", "LEVCIR") 'For Ending with XLS
ListOfSASFiles2 = Array("COMBINEDTL", "COMBINEOD")
ListOfSASFiles3 = Array("MVCI Listing") 'For Ending with XLSX - Mortgage
ListOfSASFiles4 = Array("UNUSEDDTL") 'For Ending with XLS
'Generated by SAS Code Part 1
For i = 0 To UBound(ListOfSASFiles)
   'Import Part 1 SAS File
    DoCmd.DeleteObject acTable, ListOfSASFiles(i)
    DoCmd.TransferSpreadsheet acImport, 10, ListOfSASFiles(i), DefaultLoc + ListOfSASFiles(i) + ".xlsx", True, ""
Next i
'End of Generated by SAS Code Part 1

'Generated by SAS Code Part 2
For i = 0 To UBound(ListOfSASFiles2)
    'Import Part 2 SAS File
    DoCmd.DeleteObject acTable, ListOfSASFiles2(i)
    DoCmd.TransferSpreadsheet acImport, 10, ListOfSASFiles2(i), DefaultLoc + ListOfSASFiles2(i) + "_Data.xlsx", True, ""
Next i
'End of Generated by SAS Code Part 2

'Generated by SAS Code Part 3 - Mortgage Generated
For i = 0 To UBound(ListOfSASFiles3)
    'Import Part 1 SAS File
    DoCmd.DeleteObject acTable, ListOfSASFiles3(i)
    DoCmd.TransferSpreadsheet acImport, 10, ListOfSASFiles3(i), DefaultLoc + "MVCI_" & Right(CurYear, 2) & CurMthNum + ".xlsx", True, ""
Next i
'End of Generated by SAS Code Part 3 - Mortgage Generated

'Generated by SAS Code Part 4
For i = 0 To UBound(ListOfSASFiles4)
    'Import Part 1 SAS File
    DoCmd.DeleteObject acTable, ListOfSASFiles4(i)
    DoCmd.TransferSpreadsheet acImport, 10, ListOfSASFiles4(i), DefaultLoc + ListOfSASFiles4(i) + ".xlsx", True, ""
Next i
'End of Generated by SAS Code Part 4

    
'Importing Temporary OverDrafts from Cold Report Server in Excel Form
    DoCmd.DeleteObject acTable, "Overline OD"
    DoCmd.TransferSpreadsheet acImport, 10, "Overline OD", DefaultLoc + "Overline OD from COLD.xlsx", True, "999.9999!"
    DoCmd.RunSQL "DELETE * FROM [Overline OD] WHERE [CIR TYPE] IS NULL AND [ACCT NO] IS NULL;"
'End of Importing Temporary OverDrafts from Cold Report Server in Excel Form

'Importing Currency Codes Table From Access Table
    DoCmd.DeleteObject acTable, "Currency Code"
    DoCmd.TransferSpreadsheet acImport, 10, "Currency Code", CurrencyLoc + "currencycode" & CurrencyVar & ".xlsx", True, ""
    'DoCmd.TransferSpreadsheet acImport, 10, "Currency Code", DefaultLoc + "Overline OD from COLD.xls", True, "999.9999!"
'End of Importing Currency Codes Table From Access Table
'----------------------------------------------------------------------
'----------------------------------------------------------------------
'----------------------------------------------------------------------

ImportExcelFiles_Exit:
    Exit Function

ImportExcelFiles_Err:
    MsgBox Error$
    Resume ImportExcelFiles_Exit

End Function
'------------------------------------------------------------
' End of Import Required Excel Files
'
'------------------------------------------------------------


Sub RunAllPreBuiltMacroBeforeMyTime()
DoCmd.SetWarnings False
'Application.DisplayAlerts = False

DoCmd.RunMacro "1 Make OD and MTA"
DoCmd.RunMacro "2 Make DTL"
'DoCmd.RunMacro "3 Make Staff HL and PL"
DoCmd.RunMacro "4 Make FX Leverage"
Call CloseOpenTables
DoCmd.RunMacro "A - CIR MTA data"
DoCmd.RunMacro "B1 - CIR OD data"
'DoCmd.RunMacro "B2 - CIR CLEAN OD data"
DoCmd.RunMacro "C1 - CIR DTL data"
Call CloseOpenTables
DoCmd.RunMacro "C2 - CIR DTL Unused -"
DoCmd.RunMacro "C3 - CIR  Insurance DTL data"
DoCmd.RunMacro "D1 - CIR FX Lev data"
DoCmd.RunMacro "D2 - CIR FX Lev Unused Line -"
Call CloseOpenTables
'DoCmd.RunMacro "E - CIR Staff HL data"
'DoCmd.RunMacro "F - CIR Staff PL data"
DoCmd.RunMacro "G - CIR Overline OD data"
DoCmd.RunMacro "G - IPB OD data to FINCON"
DoCmd.RunMacro "H - Unused OD data to FINCON_nonSGD_G3"
'DoCmd.RunMacro "I - Recon to Basel"
Call CloseOpenTables

DoCmd.SetWarnings True
'Application.DisplayAlerts = True
End Sub

Sub CloseOpenTables()
With CurrentData
   ' "Tables"
   For Each aob In .AllTables
       If aob.IsLoaded Then
           DoCmd.Close acTable, aob.Name, acSaveYes
       End If
   Next aob
 
   ' "Queries"
   For Each aob In .AllQueries
       If aob.IsLoaded Then
           DoCmd.Close acQuery, aob.Name, acSaveYes
       End If
   Next aob
End With
End Sub


'-------------------------------------------------------------------------
' ExportExcelFiles - Darryl
'
'
' Note to self - Prior to Macro (Can be found in Jun2016 - Note to self)
' DTL consist of Table COMBINEDTL_DTL
' DTL Final consist of Table Basel Recon-DTL & Basel Recon-PF (Needed for Justine's PMAX Code Run)
' Note - Difference between All positive is this additional line of filtering [AND (([ENR_NCY]+[INTEREST_NCY]+[FEES_NCY]+[Latefee_NCY])>0));]
' DTL Final for Mark consist of Table DTL Final but segregated by GCB
'-------------------------------------------------------------------------
Public Sub ExportExcelFiles()
On Error GoTo ExportExcelFiles_Err
Dim DefaultLoc, DefaultLoc2 As String
Dim CurMth As String
Dim CurYear As String
Dim CombineDTLQuery, CombineODQuery, QueryForProductManager
Dim MTAQuery


MthNum = Month(Date) - 1
If MthNum = 0 Then MthNum = 12
CurMth = Left(MonthName(MthNum), 3) 'Update with current month based on the folder name
CurYear = Year(Date - 30) 'Update with current year based on the folder name
DefaultLoc = "G:\RISK_MGMT19\INVESTMENT\CIR\" + CurYear + "\" + CurMth + " " + CurYear + "\Access Excel Export"

'CombineDTL File Export
'
'CombineDTL_DTL
'DTL Final
'DTL Final For Mark
CombineDTLQuery = Array("COMBINEDTL", "CombineDTL_DTL", "DTL Final")
For i = 0 To UBound(CombineDTLQuery)
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, CombineDTLQuery(i), DefaultLoc + "\COMBINEDTL.xlsx", True
Next i
'End of CombineDTL File Export

'CombineOD File Export
'
'CombineOD_OD ok
'CombineOD_MTA ok
'OD Final
'MTA Final
'OD Final For Mark
'MTA Final For Mark
CombineODQuery = Array("COMBINEOD", "CombineOD_OD", "CombineOD_MTA", "OD Final", "MTA Final", "CashBacked Loan(Sec code 50,51)")
For i = 0 To UBound(CombineODQuery)
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, CombineODQuery(i), DefaultLoc + "\COMBINEOD.xlsx", True
Next i
'End of CombineOD File Export

'Product Manager File Export
'
'DTL Final For Mark
'MTA Final For Mark
'OD Final For Mark
QueryForProductManager = Array("DTL Final For Mark", "MTA Final For Mark", "OD Final For Mark")
For i = 0 To UBound(QueryForProductManager)
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, QueryForProductManager(i), DefaultLoc + "\Product Listing For Mark.xlsx", True
Next i
'End of Product Manager File Export

'New Insurance File Export
'
'NEW -   CIR File    CIRNEW_INSUR DTL
'INCR -  CIR File    Y 8b Insur DTL_AppLimit_Incr
'QueryForProductManager = Array("CIRNEW_INSUR DTL v2", "Y 8b Insur DTL_AppLimit_Incr v2")
NewInsuranceALS = Array("9k CIR_Insur DTL_New Bookings in ALS")
For i = 0 To UBound(NewInsuranceALS)
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, NewInsuranceALS(i), DefaultLoc + "\New Insurance Account_ALS.xlsx", True
Next i

NewInsuranceCLMS = Array("CIRNEW_INSUR DTL v2", "Y 8b Insur DTL_AppLimit_Incr v2")
For i = 0 To UBound(NewInsuranceCLMS)
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, NewInsuranceCLMS(i), DefaultLoc + "\New Insurance Account_CLMS.xlsx", True
Next i

'Countercyclical Buffer Reporting (MAS Notice 637) - DTL/OD for GCB/IPB Export [Quarterly]
'
'For Hong Kong, Sweden, Norway
'Countercyclical Buffer Reporting (MAS Notice 637) - Combine
QueryForProductManager = Array("Countercyclical Buffer Reporting (MAS Notice 637) - Combine", "Countercyclical Buffer Reporting (MAS Notice 637) - DTL", "Countercyclical Buffer Reporting (MAS Notice 637) - MTA", "Countercyclical Buffer Reporting (MAS Notice 637) - OD")
For i = 0 To UBound(QueryForProductManager)
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, QueryForProductManager(i), DefaultLoc + "\CounterCyclicalBufferReport (MAS 637).xlsx", True
Next i
'End of Countercyclical Buffer Reporting (MAS Notice 637) - DTL/OD for GCB/IPB Export [Quarterly]

'Additional Reporting (INTERNAL)

    'Unfunded and Unused Commitment
    UnfundedAndUnusedCommitment = Array("Unfunded_Unused_Commitment")
    For i = 0 To UBound(UnfundedAndUnusedCommitment)
        DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, UnfundedAndUnusedCommitment(i), DefaultLoc + "\Unfunded And Unused Commitment.xlsx", True
    Next i
    'End of Unfunded and Unused Commitment

    'PF File for OAP to finance (required for philip)
    PFFileForOAPToFinance = Array("ZZ3 DTL_all_Seccode072_Full", "ZZ4 DTL_all_Seccode072_Groupby")
    For i = 0 To UBound(PFFileForOAPToFinance)
        DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, PFFileForOAPToFinance(i), DefaultLoc + "\DTL secured by insurance " & CurMth & " with curr.xlsx", True
    Next i
    'End of PF File for OAP to finance (required for philip)
    
    'MLT portfolio power acct status
    'Source table is from ZZ5 OD_50_51_98_99_CLOU and ZZ6 DTL_099_098_CLOU
    '
    MltPPRAccStatus = Array("OD_50_51_98_99", "DTL_98_99", "PF_72")
    For i = 0 To UBound(MltPPRAccStatus)
        DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, MltPPRAccStatus(i), DefaultLoc + "\MIS for CLOU " & CurMth & CurYear & ".xlsx", True
    Next i
    'End of MLT portfolio power acct status

    'Escalation Email for delinquent DTL and OD to retail banking
    'Source table is from ZZ2 DTL_ENR_GCB_DPD>0 and ZZ2 OD_ENR_GCB_DPD>0
    '
    DelinquentGCBLoans = Array("GCB DTL", "GCB OD")
    For i = 0 To UBound(DelinquentGCBLoans)
        DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, DelinquentGCBLoans(i), DefaultLoc + "\DelinquentGCBLoans " & CurMth & CurYear & ".xlsx", True
    Next i
    'End of Escalation Email for delinquent DTL and OD to retail banking
    
    IPFExposure = Array("IPF Exposure Monthly Report", "IPF Breakdown")
    For i = 0 To UBound(IPFExposure)
        DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, IPFExposure(i), DefaultLoc + "\IPFExposure " & CurMth & CurYear & ".xlsx", True
    Next i
    
    
    
'End of Additional Reportnig (INTERNAL)

'BASEL Reporting for Unfunded and Unused Commitment
    BaselUnUsedFundedComm = Array("OD Unused GCB Reporting For BASEL", "OD Unused IPB Reporting For BASEL")
    For i = 0 To UBound(BaselUnUsedFundedComm)
        DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, BaselUnUsedFundedComm(i), DefaultLoc + "\Basel UnUsed UnFunded Commitment " & CurMth & CurYear & ".xlsx", True
    Next i
'End of BASEL Reporting for Unfunded and Unused Commitment

'BASEL CRR for OD
    CRROD = Array("CRR_OD_ENR", "CRR_OD_New_Bookings", "CRR_OD_Incr_Bookings")
    For i = 0 To UBound(CRROD)
        DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, CRROD(i), DefaultLoc + "\CRROD " & CurMth & CurYear & ".xlsx", True
    Next i
'End of BASEL CRR for OD

'For Top 100 LEVCIR
LEVCIR = Array("10a CIR_FX Lev_all")
For i = 0 To UBound(LEVCIR)
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, LEVCIR(i), DefaultLoc + "\LEVCIR_Access_Export.xlsx", True
Next i
'End For Top 100 LEVCIR

ExportExcelFiles_Exit:
    Exit Sub

ExportExcelFiles_Err:
    MsgBox Error$
    Resume ExportExcelFiles_Exit

End Sub

